📊 PARÇA 7: ANTI-REVENGE & ANTI-OVERTRADING
😤 1. ANTI-REVENGE TRADE SYSTEM
1.1 Revenge Trade Tanımı
Revenge Trade:
├─ Son trade kayıp
├─ Hemen telafi etme düşüncesi
├─ Aceleci, düşüncesiz entry
├─ Genelde daha büyük kayıp
└─ Emotional decision (logic değil)

Neden Tehlikeli:
├─ Standartlar düşüyor
├─ Risk artıyor
├─ FOMO ile birleşiyor
└─ Spiral (loss → revenge → loss → revenge...)
1.2 Coin-Based Cooldown System
COOLDOWN_RULES = {
    
    # ══════════════════════════════════
    # Level 1: Single Loss (Soft)
    # ══════════════════════════════════
    'single_loss': {
        'trigger': 'One loss on specific coin',
        'cooldown_duration': '15 minutes',
        'scope': 'COIN-SPECIFIC',
        'restriction': 'Soft warning (can override)',
        'other_coins': 'ALLOWED ✓',
        
        'example': '''
        10:00 - BTCUSDT loss
        10:05 - BTCUSDT setup → WARNING (wait 10 more min)
        10:05 - ETHUSDT setup → ALLOWED ✓
        10:15 - BTCUSDT setup → ALLOWED ✓
        '''
    },
    
    # ══════════════════════════════════
    # Level 2: Large Loss (Medium)
    # ══════════════════════════════════
    'large_loss': {
        'trigger': 'Loss > -1.2% on specific coin',
        'cooldown_duration': '30 minutes',
        'scope': 'COIN-SPECIFIC',
        'restriction': 'HARD BLOCK for that coin',
        'other_coins': 'ALLOWED ✓',
        
        'example': '''
        10:00 - BTCUSDT loss -1.3%
        10:20 - BTCUSDT setup → BLOCKED (wait 10 more min)
        10:20 - ETHUSDT setup → ALLOWED ✓
        10:30 - BTCUSDT setup → ALLOWED ✓
        '''
    },
    
    # ══════════════════════════════════
    # Level 3: Double Loss (Hard)
    # ══════════════════════════════════
    'double_loss': {
        'trigger': '2 consecutive losses on same coin',
        'cooldown_duration': '45 minutes',
        'scope': 'COIN-SPECIFIC',
        'restriction': 'HARD BLOCK for that coin',
        'risk_reduction': 'Next trade 1.5% risk (reduced)',
        'other_coins': 'ALLOWED ✓',
        
        'example': '''
        10:00 - BTCUSDT loss #1
        10:20 - BTCUSDT loss #2
        11:05 - BTCUSDT setup → ALLOWED (45 min passed)
                Risk: 1.5% (reduced from 2%)
        
        10:25 - ETHUSDT setup → ALLOWED ✓ (different coin)
        '''
    },
    
    # ══════════════════════════════════
    # Level 4: Triple Loss (Very Hard)
    # ══════════════════════════════════
    'triple_loss': {
        'trigger': '3 consecutive losses on same coin',
        'cooldown_duration': '2 hours',
        'scope': 'COIN-SPECIFIC + GLOBAL WARNING',
        'restriction': 'FULL STOP for that coin',
        'quality_increase': 'Zone quality min 7 (raised)',
        'other_coins': 'ALLOWED but risk -50%',
        'global_warning': True,
        
        'example': '''
        10:00 - BTCUSDT loss #1
        10:25 - BTCUSDT loss #2
        10:50 - BTCUSDT loss #3
        
        11:00 - BTCUSDT setup → BLOCKED (wait until 12:50)
        11:00 - ETHUSDT setup → ALLOWED but:
                - Risk reduced to 1% (50% reduction)
                - Quality min 7 required
                - Global caution active
        
        12:50 - BTCUSDT setup → ALLOWED
                - Quality must be 7+
                - Risk 1% (very cautious)
        '''
    },
    
    # ══════════════════════════════════
    # Level 5: Daily Loss Limit (Global)
    # ══════════════════════════════════
    'daily_loss_limit': {
        'trigger': 'Total portfolio loss > -6%',
        'cooldown_duration': 'Rest of day',
        'scope': 'GLOBAL (ALL COINS)',
        'restriction': 'TRADING STOPPED',
        
        'example': '''
        Losses today:
        - BTCUSDT: -2%
        - ETHUSDT: -1.5%
        - SOLUSDT: -2.8%
        = Total: -6.3%
        
        → ALL TRADING STOPPED
        → Resume tomorrow at 00:00 UTC
        '''
    }
}
1.3 Coin State Tracking
COIN_STATE_STRUCTURE = {
    'BTCUSDT': {
        'last_trade_time': '10:00 UTC',
        'last_trade_result': 'LOSS',
        'consecutive_losses': 2,
        'cooldown_active': True,
        'cooldown_until': '10:45 UTC',
        'cooldown_level': 'double_loss',
        'next_trade_risk': 1.5,  # Reduced
        'status': '🔴 BLOCKED until 10:45'
    },
    
    'ETHUSDT': {
        'last_trade_time': '09:45 UTC',
        'last_trade_result': 'WIN',
        'consecutive_losses': 0,
        'cooldown_active': False,
        'cooldown_until': None,
        'next_trade_risk': 2.0,  # Normal
        'status': '🟢 READY'
    },
    
    'SOLUSDT': {
        'last_trade_time': '09:30 UTC',
        'last_trade_result': 'LOSS',
        'consecutive_losses': 1,
        'cooldown_active': True,
        'cooldown_until': '09:45 UTC',
        'cooldown_level': 'single_loss',
        'next_trade_risk': 2.0,  # Normal (soft warning only)
        'status': '🟡 WARNING (soft cooldown)'
    }
}
1.4 Recovery Protocol
RECOVERY_PROTOCOL = {
    
    # ══════════════════════════════════
    # Phase 1: First Trade After Cooldown
    # ══════════════════════════════════
    'first_trade_after_cooldown': {
        'risk_adjustment': 0.5,  # 50% reduction
        'quality_threshold': '+1',  # Raised by 1
        'confidence_required': 'Medium+',
        
        'example': '''
        Normal:
        - Risk: 2%
        - Quality min: 4
        
        After Cooldown:
        - Risk: 1% (50% reduced)
        - Quality min: 5 (raised)
        - Message: "Ease back in slowly"
        '''
    },
    
    # ══════════════════════════════════
    # Phase 2: Second Trade
    # ══════════════════════════════════
    'second_trade': {
        'if_first_won': {
            'risk': 1.5,  # 75% of normal
            'quality': 'Normal',
            'message': 'Building confidence back'
        },
        'if_first_lost': {
            'risk': 1.0,  # Stay reduced
            'cooldown': 'Extended 30 min',
            'message': 'Still struggling, stay cautious'
        }
    },
    
    # ══════════════════════════════════
    # Phase 3: Full Recovery
    # ══════════════════════════════════
    'full_recovery': {
        'requirement': '2+ consecutive wins',
        'risk': 2.0,  # Back to normal
        'quality': 'Normal',
        'status': 'Fully recovered',
        'message': 'Back to normal operations'
    }
}
1.5 Revenge Detection
def detect_revenge_trade(setup_data, trade_history):
    """
    Revenge trade tespiti
    """
    
    revenge_signals = []
    revenge_score = 0
    
    # ─────────────────────────────────
    # Signal 1: Recent Loss
    # ─────────────────────────────────
    last_trade = trade_history[-1] if trade_history else None
    
    if last_trade and last_trade['result'] == 'LOSS':
        time_since = (datetime.now() - last_trade['time']).seconds / 60
        
        if time_since < 15:
            revenge_signals.append('rapid_after_loss')
            revenge_score += 60
        elif time_since < 30:
            revenge_signals.append('quick_after_loss')
            revenge_score += 40
    
    # ─────────────────────────────────
    # Signal 2: Quality Degradation
    # ─────────────────────────────────
    if last_trade:
        last_quality = last_trade.get('setup_score', 70)
        current_quality = setup_data.get('setup_score', 70)
        
        quality_drop = last_quality - current_quality
        
        if quality_drop > 20:
            revenge_signals.append('quality_dropped')
            revenge_score += 50
        elif quality_drop > 10:
            revenge_signals.append('quality_lowered')
            revenge_score += 30
    
    # ─────────────────────────────────
    # Signal 3: Risk Increase
    # ─────────────────────────────────
    if last_trade:
        last_risk = last_trade.get('risk_percent', 2.0)
        current_risk = setup_data.get('risk_percent', 2.0)
        
        if current_risk > last_risk:
            revenge_signals.append('increased_risk')
            revenge_score += 40
    
    # ─────────────────────────────────
    # Signal 4: Cooldown Violation
    # ─────────────────────────────────
    coin = setup_data.get('coin')
    cooldown_active = check_coin_cooldown(coin)
    
    if cooldown_active:
        revenge_signals.append('cooldown_violated')
        revenge_score += 70
    
    # ─────────────────────────────────
    # Signal 5: Streak Pattern
    # ─────────────────────────────────
    recent_5 = trade_history[-5:] if len(trade_history) >= 5 else trade_history
    losses = sum(1 for t in recent_5 if t['result'] == 'LOSS')
    
    if losses >= 3:
        revenge_signals.append('losing_streak')
        revenge_score += 50
    
    # ─────────────────────────────────
    # Decision
    # ─────────────────────────────────
    if revenge_score >= 60:
        return {
            'is_revenge': True,
            'score': revenge_score,
            'signals': revenge_signals,
            'reason': f'Revenge pattern: {", ".join(revenge_signals)}',
            'action': 'BLOCK TRADE'
        }
    
    return {
        'is_revenge': False,
        'score': revenge_score
    }
1.6 Revenge Trade Examples
═════════════════════════════════════════════════════════
ÖRNEK 1: CLASSIC REVENGE (BLOCKED)
═════════════════════════════════════════════════════════
Timeline:
10:00 - BTCUSDT entry, quality 75
10:25 - BTCUSDT stop loss -1.5%
10:27 - New BTCUSDT setup appears, quality 60

Revenge Detection:
─────────────────────────────────────────────────────────
✗ Time since loss: 2 minutes (rapid!)
✗ Quality drop: 75 → 60 (-15 points)
✗ Cooldown: 15 min required, only 2 min passed
✗ Emotional state: Stress high

Revenge Score: 60 + 30 + 70 = 160 (VERY HIGH!)

Decision:
├─ TRADE BLOCKED ✗
├─ Reason: "Revenge trade detected - wait 13 more minutes"
├─ Penalty if forced: -80
└─ Cooldown enforced

Result: Bot prevented from revenge trade ✓

═════════════════════════════════════════════════════════
ÖRNEK 2: PATIENT RECOVERY (ALLOWED)
═════════════════════════════════════════════════════════
Timeline:
10:00 - BTCUSDT entry, quality 72
10:25 - BTCUSDT stop loss -1.5%
10:45 - Cooldown period (15 min) waiting...
11:00 - New BTCUSDT setup, quality 78

Revenge Detection:
─────────────────────────────────────────────────────────
✓ Time since loss: 35 minutes (good)
✓ Quality improved: 72 → 78 (+6)
✓ Cooldown: Expired
✓ New setup: Fresh ChoCH + Fib

Revenge Score: 0 (NONE!)

Decision:
├─ TRADE ALLOWED ✓
├─ Risk: 1.5% (recovery mode, reduced)
├─ Bonus: +20 (patience after loss)
└─ Message: "Patient recovery entry"

Result: Quality trade after proper cooldown ✓

═════════════════════════════════════════════════════════

🔄 2. ANTI-OVERTRADING SYSTEM
2.1 Overtrading Definition
Overtrading:
├─ Çok fazla trade açma
├─ Kalite < Miktar
├─ Yorgunluk → Hatalar
├─ Commission erosion
└─ Emotional exhaustion

Red Flags:
├─ Aynı gün 5+ trade
├─ Aynı coin 2+ trade/gün
├─ Hızlı ardışık trade'ler
├─ Setup kalitesi düşüyor
└─ Kazanç/kayıp küçük, commission yüksek
2.2 Time-Based Limits (Coin-Specific)
TIME_BASED_LIMITS = {
    
    # ══════════════════════════════════
    # Same Coin Cooldown
    # ══════════════════════════════════
    'same_coin_timing': {
        'same_direction': {
            'minimum_wait': '30 minutes',
            'reason': 'Back-to-back same direction suspicious',
            'example': '''
            10:00 - BTCUSDT LONG
            10:20 - BTCUSDT LONG setup → BLOCKED (wait 10 min)
            10:30 - BTCUSDT LONG setup → ALLOWED ✓
            '''
        },
        
        'different_direction': {
            'minimum_wait': '15 minutes',
            'reason': 'Direction change OK but still wait',
            'example': '''
            10:00 - BTCUSDT LONG
            10:12 - BTCUSDT SHORT setup → BLOCKED (wait 3 min)
            10:15 - BTCUSDT SHORT setup → ALLOWED ✓
            '''
        },
        
        'same_zone': {
            'minimum_wait': '45 minutes',
            'reason': 'Same zone retry needs more time',
            'example': '''
            10:00 - BTCUSDT Zone A entry
            10:30 - BTCUSDT Zone A setup → BLOCKED (wait 15 min)
            10:45 - BTCUSDT Zone A setup → ALLOWED ✓ (re-entry)
            '''
        }
    },
    
    # ══════════════════════════════════
    # Global Timing
    # ══════════════════════════════════
    'global_timing': {
        'min_time_between_any_trades': '15 minutes',
        'example': '''
        10:00 - BTCUSDT entry
        10:10 - ETHUSDT setup → BLOCKED (wait 5 min)
        10:15 - ETHUSDT setup → ALLOWED ✓
        '''
    }
}
2.3 Frequency Limits
FREQUENCY_LIMITS = {
    
    'daily': {
        'max_trades_total': 5,
        'max_trades_per_coin': 2,
        'max_trades_per_hour': 2,
        
        'tracking': '''
        Trades Today:
        ├─ BTCUSDT: 2 (limit reached)
        ├─ ETHUSDT: 1
        └─ SOLUSDT: 1
        Total: 4/5
        
        Next trade:
        ├─ BTCUSDT: BLOCKED (coin limit)
        ├─ ETHUSDT: ALLOWED ✓
        └─ AVAXUSDT: ALLOWED ✓ (new coin)
        '''
    },
    
    'hourly': {
        'max_per_hour': 2,
        'rolling_window': True,
        
        'example': '''
        10:00 - Trade #1
        10:25 - Trade #2
        10:40 - Trade #3 attempt → BLOCKED
                Reason: "2 trades in last hour"
        11:00 - Trade #3 attempt → ALLOWED
                Reason: "Trade #1 outside 1h window"
        '''
    }
}
2.4 Quality Monitoring
QUALITY_MONITORING = {
    
    'declining_quality_detection': {
        'check': 'Average setup score last 3 trades',
        'threshold': 'Decline > 15 points',
        
        'example': '''
        Trade 1: Score 85
        Trade 2: Score 70
        Trade 3: Score 55
        Average: 70 (declining trend!)
        
        Action:
        ├─ Raise quality threshold: 4 → 6
        ├─ Force longer cooldown: 15 → 30 min
        └─ Message: "Quality declining, slow down"
        '''
    },
    
    'consecutive_small_trades': {
        'check': 'PnL last 5 trades',
        'threshold': 'All |PnL| < 0.8%',
        
        'example': '''
        Recent trades:
        +0.5%, -0.3%, +0.4%, -0.6%, +0.7%
        
        All small! Churning without progress.
        
        Action:
        ├─ Reduce frequency
        ├─ Wait for better setups
        └─ Message: "Quality > Quantity"
        '''
    }
}
2.5 Overtrading Detection
def detect_overtrading(setup_data, trade_history):
    """
    Overtrading tespiti
    """
    
    overtrading_signals = []
    overtrading_score = 0
    
    # ─────────────────────────────────
    # Signal 1: Daily Frequency
    # ─────────────────────────────────
    today_trades = [t for t in trade_history 
                    if t['date'] == datetime.now().date()]
    
    if len(today_trades) >= 4:
        overtrading_signals.append('high_daily_frequency')
        overtrading_score += 50
    
    # ─────────────────────────────────
    # Signal 2: Rapid Trading
    # ─────────────────────────────────
    if len(trade_history) >= 2:
        last_two_times = [t['time'] for t in trade_history[-2:]]
        time_diff = (last_two_times[1] - last_two_times[0]).seconds / 60
        
        if time_diff < 15:
            overtrading_signals.append('rapid_succession')
            overtrading_score += 40
    
    # ─────────────────────────────────
    # Signal 3: Quality Decline
    # ─────────────────────────────────
    if len(today_trades) >= 3:
        scores = [t['setup_score'] for t in today_trades[-3:]]
        avg_score = sum(scores) / len(scores)
        
        if avg_score < 60:
            overtrading_signals.append('quality_declining')
            overtrading_score += 35
    
    # ─────────────────────────────────
    # Signal 4: Coin-Specific Overtrading
    # ─────────────────────────────────
    coin = setup_data['coin']
    coin_trades_today = [t for t in today_trades if t['coin'] == coin]
    
    if len(coin_trades_today) >= 2:
        overtrading_signals.append('coin_limit_reached')
        overtrading_score += 60
    
    # ─────────────────────────────────
    # Signal 5: Small Wins/Losses
    # ─────────────────────────────────
    if len(trade_history) >= 5:
        recent_pnl = [abs(t['pnl_percent']) for t in trade_history[-5:]]
        avg_pnl = sum(recent_pnl) / len(recent_pnl)
        
        if avg_pnl < 0.8:
            overtrading_signals.append('churning')
            overtrading_score += 30
    
    # ─────────────────────────────────
    # Decision
    # ─────────────────────────────────
    if overtrading_score >= 50:
        return {
            'is_overtrading': True,
            'score': overtrading_score,
            'signals': overtrading_signals,
            'reason': f'Overtrading: {", ".join(overtrading_signals)}',
            'action': 'BLOCK or FORCE COOLDOWN'
        }
    
    return {
        'is_overtrading': False,
        'score': overtrading_score
    }

🧠 3. EMOTIONAL STATE SIMULATION
3.1 State Variables
EMOTIONAL_STATE = {
    
    # ══════════════════════════════════
    # 1. Confidence Level (0.0 - 1.0)
    # ══════════════════════════════════
    'confidence': {
        'range': (0.0, 1.0),
        'default': 0.5,
        
        'factors': {
            'recent_win_rate': {
                'weight': 0.4,
                'calculation': 'Last 20 trades win rate'
            },
            'consecutive_wins': {
                'weight': 0.2,
                'calculation': 'Current streak bonus'
            },
            'drawdown': {
                'weight': 0.2,
                'calculation': '1 - (drawdown / 20)'
            },
            'setup_quality': {
                'weight': 0.2,
                'calculation': 'Avg setup score / 100'
            }
        },
        
        'impact': {
            'high (0.8+)': 'Normal risk (2%)',
            'medium (0.5-0.8)': 'Slightly reduced (-10%)',
            'low (< 0.5)': 'Heavily reduced (-50%), quality +1'
        }
    },
    
    # ══════════════════════════════════
    # 2. Stress Level (0.0 - 1.0)
    # ══════════════════════════════════
    'stress': {
        'range': (0.0, 1.0),
        'default': 0.0,
        
        'increase_triggers': {
            'consecutive_loss': '+0.2 per loss',
            'high_drawdown': '+0.3 if DD > 10%',
            'overtrading_risk': '+0.2 if near limits',
            'high_volatility': '+0.1 if ATR > 10%'
        },
        
        'decrease': '-0.1 per hour without issues',
        
        'impact': {
            'low (< 0.3)': 'Normal operation',
            'medium (0.3-0.6)': 'Cooldown durations 2x',
            'high (0.6-0.8)': 'Risk -30%, quality +1',
            'critical (> 0.8)': 'FORCED BREAK 4 hours'
        }
    },
    
    # ══════════════════════════════════
    # 3. Patience Level (0.0 - 1.0)
    # ══════════════════════════════════
    'patience': {
        'range': (0.0, 1.0),
        'default': 1.0,
        
        'factors': {
            'time_since_last_trade': '+0.1 per hour',
            'missed_setups': '-0.2 per missed opportunity',
            'boredom': '-0.1 if no setup 6+ hours'
        },
        
        'impact': {
            'low (< 0.3)': {
                'warning': 'FOMO RISK HIGH!',
                'action': 'Quality threshold +1',
                'message': 'Low patience detected'
            },
            'high (> 0.7)': 'Good state, normal operation'
        }
    }
}
3.2 State Updates
def update_emotional_state(bot_state, event):
    """
    Bot emotional state güncelleme
    """
    
    if event['type'] == 'TRADE_WIN':
        # Confidence artır
        bot_state['confidence'] += 0.1
        bot_state['confidence'] = min(1.0, bot_state['confidence'])
        
        # Stress azalt
        bot_state['stress'] -= 0.15
        bot_state['stress'] = max(0.0, bot_state['stress'])
        
        # Patience reset
        bot_state['patience'] = 1.0
    
    elif event['type'] == 'TRADE_LOSS':
        # Confidence azalt
        bot_state['confidence'] -= 0.1
        bot_state['confidence'] = max(0.2, bot_state['confidence'])
        
        # Stress artır
        bot_state['stress'] += 0.2
        bot_state['stress'] = min(1.0, bot_state['stress'])
    
    elif event['type'] == 'TIME_PASSED':
        # Stress doğal azalma
        hours_passed = event['hours']
        bot_state['stress'] -= 0.1 * hours_passed
        bot_state['stress'] = max(0.0, bot_state['stress'])
        
        # Patience artma
        bot_state['patience'] += 0.1 * hours_passed
        bot_state['patience'] = min(1.0, bot_state['patience'])
    
    # Check thresholds
    if bot_state['stress'] > 0.8:
        return {
            'action': 'FORCE_BREAK',
            'duration': '4 hours',
            'reason': 'Critical stress level'
        }
    
    return {'action': 'CONTINUE'}
3.3 Emotional State Examples
═════════════════════════════════════════════════════════
ÖRNEK 1: HIGH CONFIDENCE STATE
═════════════════════════════════════════════════════════
State:
├─ Confidence: 0.85 (HIGH)
├─ Stress: 0.15 (LOW)
├─ Patience: 0.90 (HIGH)

Recent Performance:
├─ Last 10 trades: 7 wins, 3 losses
├─ Win rate: 70%
├─ Consecutive wins: 2
└─ Drawdown: 1.5%

Impact on Trading:
├─ Risk: Normal (2%)
├─ Quality threshold: Normal (4)
├─ Cooldowns: Normal duration
└─ Status: 🟢 OPTIMAL STATE

═════════════════════════════════════════════════════════
ÖRNEK 2: HIGH STRESS STATE
═════════════════════════════════════════════════════════
State:
├─ Confidence: 0.35 (LOW)
├─ Stress: 0.75 (HIGH)
├─ Patience: 0.40 (MEDIUM)

Recent Performance:
├─ Last 10 trades: 3 wins, 7 losses
├─ Win rate: 30%
├─ Consecutive losses: 3
└─ Drawdown: 8.5%

Impact on Trading:
├─ Risk: -50% → 1%
├─ Quality threshold: +1 → Min 5
├─ Cooldowns: 2x duration
└─ Status: ⚠️ CAUTION MODE

Warning: Approaching critical (0.8)
Action if stress > 0.8: FORCED BREAK 4 hours

═════════════════════════════════════════════════════════
ÖRNEK 3: LOW PATIENCE (FOMO RISK)
═════════════════════════════════════════════════════════
State:
├─ Confidence: 0.60 (MEDIUM)
├─ Stress: 0.30 (LOW-MEDIUM)
├─ Patience: 0.25 (LOW) ⚠️

Recent Activity:
├─ Last trade: 8 hours ago
├─ Missed setups: 3 (didn't meet criteria)
├─ No good setup for 8 hours
└─ Bot getting "impatient"

Impact on Trading:
├─ FOMO risk: HIGH
├─ Quality threshold: +1 → Min 5
├─ Extra scrutiny on setups
└─ Status: 🟡 FOMO PREVENTION MODE

Message: "Low patience - raising standards to prevent FOMO"

═════════════════════════════════════════════════════════

✅ PARÇA 7 ÖZET
1. Anti-Revenge Trade System
	•	✅ 5-level coin-based cooldown
	◦	Single loss: 15 min (soft)
	◦	Large loss: 30 min (hard)
	◦	Double loss: 45 min + risk reduction
	◦	Triple loss: 2 hours + quality increase + global warning
	◦	Daily limit: -6% → stop trading
	•	✅ Coin-specific state tracking
	•	✅ Recovery protocol (3 phases)
	•	✅ Revenge detection (5 signals)
	•	✅ Examples with blocking
2. Anti-Overtrading System
	•	✅ Time-based limits (coin-specific)
	◦	Same coin same direction: 30 min
	◦	Same coin different direction: 15 min
	◦	Same zone: 45 min
	◦	Global: 15 min between any trades
	•	✅ Frequency limits
	◦	Daily: Max 5 trades, 2 per coin
	◦	Hourly: Max 2 trades (rolling window)
	•	✅ Quality monitoring
	◦	Declining quality detection
	◦	Churning detection (small wins/losses)
	•	✅ Overtrading detection (5 signals)
3. Emotional State Simulation
	•	✅ 3 state variables
	◦	Confidence (0.0-1.0) - 4 factors
	◦	Stress (0.0-1.0) - triggers & decay
	◦	Patience (0.0-1.0) - FOMO prevention
	•	✅ Dynamic state updates
	•	✅ Impact on trading decisions
	•	✅ Threshold actions (force break at critical)
	•	✅ State examples (optimal, caution, FOMO risk)

🎯 COMPLETE BEHAVIORAL PROTECTION SUMMARY
═════════════════════════════════════════════════════════
PROTECTION LAYERS
═════════════════════════════════════════════════════════

Layer 1: FOMO Prevention
├─ Setup completeness check
├─ Price chasing detection
├─ Rapid entry blocking
└─ Penalty: -100 to -180

Layer 2: Revenge Prevention
├─ Coin-based cooldowns (15min to 2h)
├─ Risk reduction after losses
├─ Quality threshold increase
└─ Penalty: -80

Layer 3: Overtrading Prevention
├─ Time limits (coin + global)
├─ Frequency limits (daily/hourly)
├─ Quality monitoring
└─ Penalty: -40

Layer 4: Emotional State Management
├─ Confidence tracking
├─ Stress monitoring (force break at 0.8+)
├─ Patience tracking (FOMO prevention)
└─ Dynamic risk adjustment

Layer 5: Risk Limits (Gate 3)
├─ Daily: 6% max
├─ Portfolio: 8% max open
├─ Position: 40% max
└─ Hard blocks

═════════════════════════════════════════════════════════
DECISION FLOW
═════════════════════════════════════════════════════════

Setup Appears
      ↓
┌─────────────────┐
│ FOMO Check      │ → If FOMO: BLOCK + Penalty -100
└─────────────────┘
      ↓ Pass
┌─────────────────┐
│ Revenge Check   │ → If Revenge: BLOCK + Penalty -80
└─────────────────┘
      ↓ Pass
┌─────────────────┐
│ Overtrading     │ → If Over: BLOCK + Penalty -40
└─────────────────┘
      ↓ Pass
┌─────────────────┐
│ Emotional State │ → If Stressed: Adjust risk/quality
└─────────────────┘
      ↓ Pass
┌─────────────────┐
│ Risk Limits     │ → If Exceeded: BLOCK
└─────────────────┘
      ↓ Pass
   APPROVED
      ↓
  RL Decision

═════════════════════════════════════════════════════════

📊 COMPLETE SCENARIO EXAMPLES
Scenario A: Perfect Conditions
Time: 10:00
Coin: BTCUSDT
Last Trade: 09:30 (30 min ago, WIN)

Bot State:
├─ Confidence: 0.75
├─ Stress: 0.20
├─ Patience: 0.85
└─ Recent: 3W, 1L, 2W (5 of last 6 wins)

Setup:
├─ Quality Score: 82
├─ Zone: Quality 8
├─ ChoCH: 0.78
└─ Fib: 0.705

Checks:
├─ FOMO: ✓ Pass (setup complete, no chasing)
├─ Revenge: ✓ Pass (last was win, 30 min passed)
├─ Overtrading: ✓ Pass (2 trades today, time OK)
├─ Emotional: ✓ Pass (all states healthy)
└─ Risk Limits: ✓ Pass (all OK)

Result: ✅ APPROVED
Risk: 2% (normal)
Confidence: HIGH
Message: "Excellent conditions, take trade!"
Scenario B: High Stress State
Time: 11:00
Coin: ETHUSDT
Last Trades: 3 consecutive losses (last at 10:45)

Bot State:
├─ Confidence: 0.35
├─ Stress: 0.72 ⚠️
├─ Patience: 0.50
└─ Recent: L, L, L (3 consecutive)

Setup:
├─ Quality Score: 68
├─ Zone: Quality 7
├─ ChoCH: 0.65
└─ Fib: 0.618

Checks:
├─ FOMO: ✓ Pass
├─ Revenge: ⚠️ Warning (recent losses)
├─ Overtrading: ✓ Pass
├─ Emotional: ⚠️ HIGH STRESS (0.72)
└─ Risk Limits: ✓ Pass

Result: ⚠️ CONDITIONAL APPROVAL
Adjustments:
├─ Risk: 1% (reduced from 2%)
├─ Quality min: 5 → 6 (raised)
├─ Cooldown: 2x duration if loss
└─ Message: "High stress - cautious mode"

Note: If stress reaches 0.8 → FORCED BREAK 4 hours
Scenario C: FOMO + Revenge Combo (Blocked)
Time: 10:05
Coin: BTCUSDT
Last Trade: 10:00 (5 min ago, LOSS -1.5%)

Bot State:
├─ Confidence: 0.55
├─ Stress: 0.45
├─ Patience: 0.30
└─ Recent: W, L (just lost)

Setup:
├─ Quality Score: 52
├─ Zone: Quality 5
├─ ChoCH: 0.48 (weak!)
├─ Fib: Skipped! (price at $51,800, 3.5% from zone)
└─ Entry desire: "Price running away!"

Checks:
├─ FOMO: ✗ DETECTED
│   ├─ Fib skipped
│   ├─ Price 3.5% away (chasing!)
│   └─ Low patience (0.30)
│
├─ Revenge: ✗ DETECTED
│   ├─ 5 min since loss (too fast!)
│   ├─ Quality dropped: 72 → 52
│   └─ Cooldown violated (15 min required)
│
└─ Emotional: ⚠️ Low patience

Result: ❌ BLOCKED
Penalties:
├─ FOMO: -100
├─ Revenge: -80
└─ Total potential: -180

Messages:
├─ "FOMO + Revenge detected!"
├─ "Setup incomplete, too fast after loss"
├─ "Wait 10 more minutes"
└─ "Let price settle or find new setup"

Action: Trade prevented, bot protected ✓
Scenario D: Overtrading Limit Reached
Time: 14:00
Coin: SOLUSDT (attempting 3rd trade today)

Today's Trades:
├─ 09:00 - BTCUSDT WIN
├─ 10:00 - ETHUSDT LOSS
├─ 11:00 - SOLUSDT WIN
├─ 12:00 - SOLUSDT LOSS
└─ 14:00 - SOLUSDT attempt #3

Bot State:
├─ Confidence: 0.60
├─ Stress: 0.40
└─ Patience: 0.65

Setup:
├─ Quality Score: 70
└─ All conditions met

Checks:
├─ FOMO: ✓ Pass
├─ Revenge: ✓ Pass (1h since last)
├─ Overtrading: ✗ DETECTED
│   ├─ SOLUSDT: 2 trades today (LIMIT!)
│   ├─ Total: 4 trades today (near limit 5)
│   └─ SOLUSDT quality declining
│
└─ Risk Limits: ✓ Pass

Result: ❌ BLOCKED
Reason: "Coin trade limit reached (2/day)"
Message: "SOLUSDT: 2 trades today, try different coin"

Alternative Action:
└─ "BTCUSDT or AVAXUSDT available" ✓

🔄 FULL PROTECTION FLOW DIAGRAM
                    SETUP APPEARS
                          ↓
                 ┌────────────────┐
                 │  PA ANALYSIS   │
                 │  (Complete?)   │
                 └────────────────┘
                     ✓ Yes ↓  ✗ No → REJECT
                          ↓
                 ┌────────────────┐
                 │  GATE 1 & 2    │
                 │  Mandatory +   │
                 │  Quality Score │
                 └────────────────┘
                     ✓ Pass ↓  ✗ Fail → REJECT
                          ↓
    ┌────────────────────────────────────┐
    │     BEHAVIORAL PROTECTION          │
    │                                    │
    │  ┌──────────────────────────────┐ │
    │  │  1. FOMO CHECK               │ │
    │  │  - Setup complete?           │ │
    │  │  - Chasing price?            │ │
    │  │  - Patience level OK?        │ │
    │  └──────────────────────────────┘ │
    │         ✓ Pass ↓  ✗ Fail → BLOCK  │
    │                ↓                   │
    │  ┌──────────────────────────────┐ │
    │  │  2. REVENGE CHECK            │ │
    │  │  - Cooldown active?          │ │
    │  │  - Quality dropped?          │ │
    │  │  - Too soon after loss?      │ │
    │  └──────────────────────────────┘ │
    │         ✓ Pass ↓  ✗ Fail → BLOCK  │
    │                ↓                   │
    │  ┌──────────────────────────────┐ │
    │  │  3. OVERTRADING CHECK        │ │
    │  │  - Daily limit OK?           │ │
    │  │  - Coin limit OK?            │ │
    │  │  - Time since last OK?       │ │
    │  └──────────────────────────────┘ │
    │         ✓ Pass ↓  ✗ Fail → BLOCK  │
    │                ↓                   │
    │  ┌──────────────────────────────┐ │
    │  │  4. EMOTIONAL STATE          │ │
    │  │  - Confidence: OK?           │ │
    │  │  - Stress: Not critical?     │ │
    │  │  - Patience: Adequate?       │ │
    │  └──────────────────────────────┘ │
    │      ✓ Pass ↓  ✗ Adjust/Block    │
    └────────────────────────────────────┘
                     ↓
                 ┌────────────────┐
                 │  GATE 3        │
                 │  Risk Limits   │
                 └────────────────┘
                     ✓ Pass ↓  ✗ Fail → REJECT
                          ↓
                 ┌────────────────┐
                 │  RL DECISION   │
                 │  Final Call    │
                 └────────────────┘
                  ✓ ENTER ↓  ✗ SKIP
                          ↓
                   EXECUTE TRADE

📈 PROTECTION EFFECTIVENESS
WITHOUT BEHAVIORAL PROTECTION:
─────────────────────────────────────────────────────────
├─ FOMO trades: 15-20% of total (usually losses)
├─ Revenge trades: 10-15% of total (heavy losses)
├─ Overtrading: Quality decline, commission erosion
├─ Emotional decisions: Inconsistent performance
└─ Estimated impact: -10 to -15% annual return

WITH BEHAVIORAL PROTECTION:
─────────────────────────────────────────────────────────
├─ FOMO trades: Blocked (saved losses)
├─ Revenge trades: Prevented via cooldowns
├─ Overtrading: Limited, quality maintained
├─ Emotional decisions: Filtered and adjusted
└─ Estimated improvement: +10 to +15% annual return

NET BENEFIT: +20 to +30% annual return improvement

✅ PARÇA 7 COMPLETE
Tüm behavioral protection katmanları:
Anti-Revenge System:
	•	Coin-based cooldown (5 levels)
	•	State tracking per coin
	•	Recovery protocol
	•	Detection & blocking
Anti-Overtrading System:
	•	Time limits (coin-specific)
	•	Frequency limits (daily/hourly)
	•	Quality monitoring
	•	Automatic prevention
Emotional State System:
	•	3 tracked states (confidence, stress, patience)
	•	Dynamic updates
	•	Impact on trading
	•	Critical thresholds
Complete Protection:
	•	Multi-layer defense
	•	Examples for all scenarios
	•	Decision flow diagram
	•	Effectiveness analysis

SON PARÇA: PARÇA 8 - Learning & Complete System Integration (Continuous learning, Performance tracking, Full integration)
Devam edelim mi? 🚀
