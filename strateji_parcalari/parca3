📊 PARÇA 3: PA ADAPTIVE & RE-ENTRY
🔄 1. RE-ENTRY SYSTEM
1.1 Re-entry Nedir?
Tanım: Stop loss sonrası aynı zone'da yeni bir deneme yapma
Amaç:
Bazı zone'lar ilk denemede false breakout verir
Ama ikinci denemede güçlü bounce olur
→ İkinci şansı değerlendir
Felsefe:
❌ Kötü: "Stop oldu, bu zone kötü, bırak!"
✓ İyi: "Stop oldu, zone hala geçerli mi kontrol et"

RL Öğrenecek:
- Hangi zone'larda 2. deneme işe yarıyor?
- Hangi coinlerde re-entry başarılı?
- Hangi market koşullarında skip et?
1.2 Re-entry Configuration
RE_ENTRY_CONFIG = {
    'enabled': True,
    'wait_candles': 2,          # 2 mum bekle (30 dk @ 15M)
    'risk_reduction': 0.5,      # Yarı risk (%1 instead of %2)
    'max_attempts': 2,          # Maximum 2 deneme per zone
    'require_new_choch': True,  # Yeni ChoCH şart
    'require_new_fib': True     # Yeni Fib retest şart
}

# Açıklama:
"""
wait_candles: 2
→ Stop sonrası hemen girme
→ 2 mum (30 dk) bekle
→ Piyasanın ne yapacağını gör

risk_reduction: 0.5
→ İlk trade: %2 risk
→ Re-entry: %1 risk (yarı)
→ Daha dikkatli ol

max_attempts: 2
→ İlk trade + 2 re-entry = Max 3 deneme
→ 3 kez de stop → Zone iptal

require_new_choch: True
→ Eski ChoCH yetmez
→ Yeni bir ChoCH oluşmalı
→ Fresh signal gerekli

require_new_fib: True
→ Fiyat tekrar zone'a gelmeli
→ Yeni Fibonacci retest yapmalı
→ Setup yeniden oluşmalı
"""
1.3 Re-entry Conditions (Koşullar)
def check_re_entry_eligibility(zone, last_trade):
    """
    Re-entry yapılabilir mi?
    """
    
    conditions = {}
    
    # ─────────────────────────────────
    # 1. Son trade stop loss mu?
    # ─────────────────────────────────
    if last_trade.result != "STOP_LOSS":
        return {
            'eligible': False,
            'reason': 'Last trade was not stopped'
        }
    conditions['stopped'] = True
    
    # ─────────────────────────────────
    # 2. Yeterli zaman geçti mi?
    # ─────────────────────────────────
    candles_passed = count_candles_since(last_trade.exit_time)
    
    if candles_passed < 2:  # 2 mum = 30 dk @ 15M
        return {
            'eligible': False,
            'reason': f'Wait {2 - candles_passed} more candles'
        }
    conditions['time_passed'] = True
    
    # ─────────────────────────────────
    # 3. Zone hala geçerli mi?
    # ─────────────────────────────────
    # Zone hard break olmadı mı?
    if zone.broken:
        return {
            'eligible': False,
            'reason': 'Zone invalidated (broken)'
        }
    
    # Zone body close ile kırılmadı mı?
    last_candle_close = get_last_candle_close()
    
    if last_trade.direction == "LONG":
        # LONG için zone altında close olmamalı
        if last_candle_close < zone.bottom:
            return {
                'eligible': False,
                'reason': 'Zone broken below'
            }
    else:  # SHORT
        # SHORT için zone üstünde close olmamalı
        if last_candle_close > zone.top:
            return {
                'eligible': False,
                'reason': 'Zone broken above'
            }
    
    conditions['zone_valid'] = True
    
    # ─────────────────────────────────
    # 4. Yeni ChoCH oluştu mu?
    # ─────────────────────────────────
    new_choch = detect_choch_since(last_trade.exit_time)
    
    if not new_choch.detected:
        return {
            'eligible': False,
            'reason': 'No new ChoCH formed'
        }
    
    if new_choch.strength < 0.4:
        return {
            'eligible': False,
            'reason': 'New ChoCH too weak'
        }
    
    conditions['new_choch'] = True
    
    # ─────────────────────────────────
    # 5. Yeni Fibonacci retest var mı?
    # ─────────────────────────────────
    fib_levels = calculate_fibonacci(new_choch)
    current_price = get_current_price()
    
    fib_touched = check_fib_retest(
        current_price, 
        fib_levels, 
        last_trade.direction
    )
    
    if not fib_touched:
        return {
            'eligible': False,
            'reason': 'Waiting for Fib retest'
        }
    
    conditions['fib_retest'] = True
    
    # ─────────────────────────────────
    # 6. Max attempt limit aşılmadı mı?
    # ─────────────────────────────────
    attempts = count_attempts_on_zone(zone)
    
    if attempts >= 2:  # Max 2 re-entry
        return {
            'eligible': False,
            'reason': 'Max attempts reached (2)'
        }
    
    conditions['attempts_ok'] = True
    
    # ─────────────────────────────────
    # TÜM KOŞULLAR SAĞLANDI!
    # ─────────────────────────────────
    return {
        'eligible': True,
        'conditions': conditions,
        'risk_reduction': 0.5,  # Yarı risk
        'message': 'Re-entry approved with reduced risk'
    }
1.4 Re-entry Scenarios
═════════════════════════════════════════════════════════
SENARYO 1: BAŞARILI RE-ENTRY
═════════════════════════════════════════════════════════

10:00 - İlk Trade
─────────────────────────────────────────────────────────
Zone: $50,000 - $50,100 (Quality 8)
ChoCH: Confirmed, strength 0.7
Entry: $50,050 (Fib 0.705)
Stop: $49,750
Risk: %2

10:30 - Stop Loss Hit
─────────────────────────────────────────────────────────
Price: $49,750
Result: LOSS -2%
Zone Status: Wick touched zone, no body close below
Action: Zone hala geçerli ✓

11:00 - Bekleme (2 mum)
─────────────────────────────────────────────────────────
Candle 1 (10:45): Price $49,850, choppy
Candle 2 (11:00): Price $49,900, consolidating
Wait complete ✓

11:15 - Yeni Setup Kontrolü
─────────────────────────────────────────────────────────
Yeni ChoCH?
├─ Price broke above last LH ($50,000)
├─ Close: $50,180
├─ Strength: 0.65
└─ NEW ChoCH CONFIRMED ✓

Fibonacci?
├─ New swing low: $49,750
├─ New swing high: $50,180
├─ Fib 0.705: $50,053
├─ Current price: $50,055
└─ FIB RETEST TOUCHED ✓

Zone?
├─ Zone not broken (no body close below)
├─ Still valid
└─ ZONE VALID ✓

Attempts?
├─ First attempt: Stopped
├─ This is 2nd attempt (1st re-entry)
└─ ATTEMPTS OK ✓

11:15 - Re-entry Approved!
─────────────────────────────────────────────────────────
Entry: $50,053 (Fib 0.705)
Stop: $49,750
Risk: %1 (reduced from %2)
Position: Half size

12:30 - TP1 Hit! 🎯
─────────────────────────────────────────────────────────
TP1: $50,507
Close 50%
Profit: +0.9% (half position)

14:00 - TP2 Hit! 🎯🎯
─────────────────────────────────────────────────────────
TP2: $51,000
Close 30%
Total Profit: +1.8%

Result: RE-ENTRY SUCCESSFUL! ✓
Lesson: Zone was valid, 2nd attempt worked
─────────────────────────────────────────────────────────

═════════════════════════════════════════════════════════
SENARYO 2: RE-ENTRY REDDEDİLDİ (Zone Broken)
═════════════════════════════════════════════════════════

10:00 - İlk Trade
─────────────────────────────────────────────────────────
Zone: $50,000 - $50,100
Entry: $50,050
Stop: $49,750

10:30 - Stop Loss Hit
─────────────────────────────────────────────────────────
Price: $49,750
Result: LOSS

10:45 - Zone Check
─────────────────────────────────────────────────────────
Candle close: $49,600 ✗
→ Body closed BELOW zone bottom ($50,000)
→ Zone BROKEN! ✗

Action: ZONE INVALIDATED
Re-entry: NOT ALLOWED
Reason: "Zone broken, not valid anymore"

Result: No re-entry, zone blacklisted
─────────────────────────────────────────────────────────

═════════════════════════════════════════════════════════
SENARYO 3: MAX ATTEMPTS REACHED
═════════════════════════════════════════════════════════

10:00 - Trade #1 (First attempt)
─────────────────────────────────────────────────────────
Entry: $50,050
Result: STOP at $49,750 (-2%)

11:00 - Trade #2 (1st re-entry)
─────────────────────────────────────────────────────────
New ChoCH: ✓
New Fib: ✓
Entry: $50,045
Risk: %1 (reduced)
Result: STOP at $49,750 (-1%)

12:00 - Trade #3 (2nd re-entry)
─────────────────────────────────────────────────────────
New ChoCH: ✓
New Fib: ✓
Entry: $50,060
Risk: %1 (reduced)
Result: STOP at $49,750 (-1%)

Total Loss: -4% (3 attempts)

13:00 - Potential Trade #4?
─────────────────────────────────────────────────────────
Setup appears again...
Attempts: 3 (max 2 allowed)

Action: ZONE BLACKLISTED ✗
Re-entry: NOT ALLOWED
Reason: "Max 2 re-entries reached"
Message: "This zone is not working, move on"

Result: Zone invalidated for future trades
─────────────────────────────────────────────────────────
1.5 RL Learning on Re-entries
RL_RE_ENTRY_LEARNING = {
    'data_collection': {
        'track': [
            'Zone quality vs re-entry success',
            'ChoCH strength vs re-entry success',
            'Time between attempts',
            'Market volatility impact',
            'Coin-specific patterns'
        ],
        
        'questions': [
            'Hangi zone quality re-entry için iyi?',
            'Re-entry zamanlaması önemli mi?',
            '1. vs 2. re-entry hangisi daha iyi?',
            'Hangi coinlerde re-entry işe yarıyor?'
        ]
    },
    
    'learning_outcomes': {
        'example_1': {
            'finding': 'Zone quality 8+ → Re-entry 70% win',
            'action': 'Zone 8+ için re-entry tercih et',
            'adjustment': 'Low quality zone re-entry skip'
        },
        
        'example_2': {
            'finding': 'BTC re-entry %65 win, SOL %45 win',
            'action': 'BTC re-entry al, SOL skip',
            'adjustment': 'Coin-specific re-entry rules'
        },
        
        'example_3': {
            'finding': 'İlk stop sonrası 1h > 30m daha iyi',
            'action': 'Wait time 2 mum → 4 mum',
            'adjustment': 'Dynamic wait time learning'
        }
    },
    
    'blacklist_learning': {
        'pattern': 'Zone X sürekli 2. denemede de kaybettiriyor',
        'action': 'Zone X blacklist',
        'future': 'Similar zone pattern detect → Skip re-entry'
    }
}

⚙️ 2. ADAPTIVE PARAMETERS
2.1 Neden Adaptive?
Problem:
Statik parametreler:
├─ BTC volatil → Depth 12 dar olabilir
├─ Stablecoin sakin → Depth 12 geniş olabilir
├─ Her coin farklı karakterde
└─ Her timeframe farklı ihtiyaç
Çözüm:
Adaptive parametreler:
├─ Volatiliteye göre ayarla
├─ Coin karakterine göre optimize et
├─ Timeframe'e göre scale et
└─ RL zamanla optimal değerleri öğrensin
2.2 Base Parameters
BASE_PARAMS = {
    'zigzag_depth': 12,
    'zigzag_deviation': 5,
    'zigzag_backstep': 2,  # Sabit (değişmez)
    'swing_strength': 5
}

# Bu değerler başlangıç noktası
# Volatilite ve timeframe'e göre çarpılacak
2.3 Adaptive Calculation
def adaptive_parameters(coin, timeframe, atr_percent):
    """
    Volatiliteye göre parametreleri ayarla
    
    Parameters:
    - coin: 'BTCUSDT'
    - timeframe: '4h', '1h', '15m'
    - atr_percent: Current ATR as % of price
    """
    
    # ─────────────────────────────────
    # 1. ATR-Based Multiplier
    # ─────────────────────────────────
    # Volatility ne kadar yüksek?
    
    if atr_percent > 8.0:
        atr_mult = 1.5  # Çok volatil (SOL gibi)
    elif atr_percent > 5.0:
        atr_mult = 1.2  # Orta-yüksek (BTC gibi)
    elif atr_percent > 3.0:
        atr_mult = 1.0  # Normal
    else:
        atr_mult = 0.8  # Düşük volatilite (stablecoin)
    
    # ─────────────────────────────────
    # 2. Timeframe Multiplier
    # ─────────────────────────────────
    # Timeframe'e göre scale
    
    tf_multipliers = {
        '4h': 1.5,   # Daha geniş bakış
        '1h': 1.0,   # Normal
        '15m': 0.7   # Daha dar bakış
    }
    tf_mult = tf_multipliers.get(timeframe, 1.0)
    
    # ─────────────────────────────────
    # 3. Final Parameters
    # ─────────────────────────────────
    params = {
        'zigzag_depth': int(
            BASE_PARAMS['zigzag_depth'] * atr_mult * tf_mult
        ),
        'zigzag_deviation': int(
            BASE_PARAMS['zigzag_deviation'] * atr_mult
        ),
        'zigzag_backstep': BASE_PARAMS['zigzag_backstep'],  # Sabit
        'swing_strength': int(
            BASE_PARAMS['swing_strength'] * atr_mult
        )
    }
    
    # ─────────────────────────────────
    # 4. Apply Limits (Aşırılıkları önle)
    # ─────────────────────────────────
    params['zigzag_depth'] = max(5, min(30, params['zigzag_depth']))
    params['zigzag_deviation'] = max(2, min(15, params['zigzag_deviation']))
    params['swing_strength'] = max(3, min(15, params['swing_strength']))
    
    return params
2.4 Adaptive Examples
═════════════════════════════════════════════════════════
ÖRNEK 1: BTC (Normal Volatility)
═════════════════════════════════════════════════════════
Coin: BTCUSDT
Timeframe: 1H
ATR: 5.2%

Calculation:
─────────────────────────────────────────────────────────
ATR Multiplier:
├─ ATR 5.2% → atr_mult = 1.2 (orta-yüksek)

Timeframe Multiplier:
├─ 1H → tf_mult = 1.0 (normal)

Parameters:
├─ Depth: 12 * 1.2 * 1.0 = 14.4 → 14
├─ Deviation: 5 * 1.2 = 6
├─ Swing: 5 * 1.2 = 6
└─ Backstep: 2 (sabit)

Final:
├─ ZigZag Depth: 14
├─ ZigZag Deviation: 6
├─ Swing Strength: 6
└─ Backstep: 2

Result: Biraz daha geniş parametreler (volatilite orta)
─────────────────────────────────────────────────────────

═════════════════════════════════════════════════════════
ÖRNEK 2: SOL (High Volatility, 15M)
═════════════════════════════════════════════════════════
Coin: SOLUSDT
Timeframe: 15M
ATR: 11.5%

Calculation:
─────────────────────────────────────────────────────────
ATR Multiplier:
├─ ATR 11.5% → atr_mult = 1.5 (çok volatil)

Timeframe Multiplier:
├─ 15M → tf_mult = 0.7 (dar bakış)

Parameters:
├─ Depth: 12 * 1.5 * 0.7 = 12.6 → 13
├─ Deviation: 5 * 1.5 = 7.5 → 8
├─ Swing: 5 * 1.5 = 7.5 → 8
└─ Backstep: 2

Final:
├─ ZigZag Depth: 13
├─ ZigZag Deviation: 8
├─ Swing Strength: 8
└─ Backstep: 2

Result: Geniş parametreler ama 15M için optimize
─────────────────────────────────────────────────────────

═════════════════════════════════════════════════════════
ÖRNEK 3: Stablecoin (Low Volatility, 4H)
═════════════════════════════════════════════════════════
Coin: USDCUSDT (örnek)
Timeframe: 4H
ATR: 0.8%

Calculation:
─────────────────────────────────────────────────────────
ATR Multiplier:
├─ ATR 0.8% → atr_mult = 0.8 (düşük volatilite)

Timeframe Multiplier:
├─ 4H → tf_mult = 1.5 (geniş bakış)

Parameters:
├─ Depth: 12 * 0.8 * 1.5 = 14.4 → 14
├─ Deviation: 5 * 0.8 = 4
├─ Swing: 5 * 0.8 = 4
└─ Backstep: 2

Final:
├─ ZigZag Depth: 14
├─ ZigZag Deviation: 4
├─ Swing Strength: 4
└─ Backstep: 2

Result: Dar deviation (küçük hareketleri yakala)
─────────────────────────────────────────────────────────
2.5 RL Parameter Optimization
RL_PARAMETER_LEARNING = {
    
    # ─────────────────────────────────
    # Phase 1: Volatility-Based (0-2 ay)
    # ─────────────────────────────────
    'phase_1': {
        'method': 'Heuristic (volatility-based)',
        'duration': '0-2 months',
        'approach': 'Use adaptive formula above',
        'goal': 'Quick start, decent results'
    },
    
    # ─────────────────────────────────
    # Phase 2: Grid Search (2-6 ay)
    # ─────────────────────────────────
    'phase_2': {
        'method': 'Grid search optimization',
        'duration': '2-6 months',
        'approach': '''
        Her coin + timeframe için:
        - Test depth: [8, 10, 12, 15, 18, 20]
        - Test deviation: [3, 5, 7, 10]
        - Test strength: [3, 5, 7, 10]
        
        Hangi kombinasyon en iyi zone'lar buluyor?
        - Zone quality ortalama nedir?
        - Win rate nedir?
        - False signal oranı?
        
        En iyi kombinasyonu kaydet
        ''',
        'frequency': 'Haftalık optimization',
        'goal': 'Coin-specific optimal parameters'
    },
    
    # ─────────────────────────────────
    # Phase 3: RL Optimization (6+ ay)
    # ─────────────────────────────────
    'phase_3': {
        'method': 'Full RL learning',
        'duration': '6+ months',
        'approach': '''
        RL parametreleri de öğrensin:
        
        State:
        - Current volatility
        - Market regime
        - Recent zone performance
        - Coin characteristics
        
        Action:
        - Adjust depth ±2
        - Adjust deviation ±1
        - Adjust strength ±1
        
        Reward:
        - Zone quality improved: +20
        - Win rate increased: +50
        - False signals reduced: +30
        
        RL sürekli optimize eder
        ''',
        'goal': 'Self-optimizing parameters'
    },
    
    # ─────────────────────────────────
    # Learning Example
    # ─────────────────────────────────
    'example_learning': {
        'coin': 'BTCUSDT',
        'timeframe': '1H',
        
        'initial': {
            'depth': 12,
            'deviation': 5,
            'zone_quality_avg': 6.2,
            'win_rate': 0.58
        },
        
        'after_6_months': {
            'depth': 15,  # RL learned: deeper better
            'deviation': 6,  # RL learned: slightly higher
            'zone_quality_avg': 7.1,  # Improved!
            'win_rate': 0.64,  # Improved!
            'reason': 'BTC needs wider view for quality zones'
        }
    }
}

💧 3. LIQUIDITY DETECTION
3.1 Liquidity Nedir?
Tanım: Stop loss kümeleri, wick seviyeleri, institutional seviyeler
Basit Açıklama:
Fiyat bir seviyeye gelir:
├─ Wick o seviyeyi sweep eder
├─ Ama body close o seviyeyi geçmez
└─ = Liquidity temizlendi

Sonuç: O seviye artık destek/direnç olabilir
3.2 Liquidity Temizlenme
def is_liquidity_cleaned(level, direction, candles_after):
    """
    Bir seviyedeki liquidity temizlendi mi?
    
    Parameters:
    - level: Price level (örn: $50,000)
    - direction: 'LONG' or 'SHORT'
    - candles_after: Level oluştuktan sonraki mumlar
    """
    
    for candle in candles_after:
        
        if direction == "LONG":
            # LONG için: Support seviyesi
            # Liquidity altındaki stop loss'lar
            
            # Wick seviyeyi sweep etti mi?
            if candle.low <= level:
                # Body close seviyenin ÜSTÜNDE mi?
                if candle.close > level:
                    return {
                        'cleaned': True,
                        'candle': candle,
                        'reason': 'Wick swept level, body held above'
                    }
        
        elif direction == "SHORT":
            # SHORT için: Resistance seviyesi
            # Liquidity üstündeki stop loss'lar
            
            # Wick seviyeyi sweep etti mi?
            if candle.high >= level:
                # Body close seviyenin ALTINDA mi?
                if candle.close < level:
                    return {
                        'cleaned': True,
                        'candle': candle,
                        'reason': 'Wick swept level, body held below'
                    }
    
    return {'cleaned': False}
3.3 Liquidity Kullanımı (TP2 için)
def find_next_liquidity_for_tp2(entry, direction, recent_candles):
    """
    TP2 için en yakın liquidity seviyesini bul
    """
    
    liquidity_levels = []
    
    # Son 50 mumdaki tüm wick'leri tara
    for candle in recent_candles:
        
        if direction == "LONG":
            # Üstteki resistance wick'ler (TP hedefi)
            if candle.high > entry:
                # Wick var ama body close altında kalmış
                if candle.close < candle.high - (candle.high - candle.low) * 0.3:
                    liquidity_levels.append({
                        'price': candle.high,
                        'type': 'resistance_wick',
                        'strength': calculate_wick_strength(candle)
                    })
        
        elif direction == "SHORT":
            # Alttaki support wick'ler (TP hedefi)
            if candle.low < entry:
                # Wick var ama body close üstte kalmış
                if candle.close > candle.low + (candle.high - candle.low) * 0.3:
                    liquidity_levels.append({
                        'price': candle.low,
                        'type': 'support_wick',
                        'strength': calculate_wick_strength(candle)
                    })
    
    # En yakın ve en güçlü liquidity'yi seç
    if liquidity_levels:
        # Entry'e yakınlık ve wick gücüne göre sırala
        best_liquidity = max(
            liquidity_levels,
            key=lambda x: x['strength'] / abs(x['price'] - entry)
        )
        return best_liquidity['price']
    
    return None
3.4 Liquidity Example
═════════════════════════════════════════════════════════
LIQUIDITY SWEEP ÖRNEK (LONG)
═════════════════════════════════════════════════════════

Zone: $50,000 - $50,100
Entry: $50,050

TP2 Belirleme:
─────────────────────────────────────────────────────────
Recent candle analysis:

Candle 1 (2 gün önce):
├─ Open: $50,800
├─ High: $51,200 ← Wick yukarı!
├─ Low: $50,750
├─ Close: $50,850
└─ Analysis: Wick swept $51,200 ama body $50,850'de kaldı
   → LIQUIDITY LEVEL: $51,200 ✓

Candle 2 (3 gün önce):
├─ Open: $51,500
├─ High: $51,900 ← Daha yüksek wick!
├─ Low: $51,400
├─ Close: $51,550
└─ Analysis: Wick swept $51,900 ama body $51,550'de kaldı
   → LIQUIDITY LEVEL: $51,900 ✓

Zone Detection:
├─ Next zone found: $52,000 - $52,100

TP2 Decision:
─────────────────────────────────────────────────────────
Options:
1. Liquidity $51,200 (yakın, güçlü wick)
2. Liquidity $51,900 (uzak, daha güçlü)
3. Zone $52,000 (en uzak)

Selection Logic:
├─ $51,200: RR 2.0 (iyi)
├─ $51,900: RR 3.1 (mükemmel!)
└─ $52,000: RR 3.3 (çok uzak, riskli)

SELECTED TP2: $51,900
Reason: En iyi RR + Güçlü liquidity level

Görsel:
─────────────────────────────────────────────────────────
$52,000 ─────  Zone (alternatif)
         │
$51,900 ═════  LIQUIDITY (TP2 SEÇİLDİ) ⭐
         │     Wick swept, body held below
         │
$51,200 ─────  Liquidity (daha yakın)
         │
$50,050 ═════  ENTRY
         │
$50,000 ─────  Zone

═════════════════════════════════════════════════════════

🔄 4. COMPLETE PA TRADE FLOW
4.1 Full Step-by-Step Process
═════════════════════════════════════════════════════════
COMPLETE PA TRADING PROCESS
═════════════════════════════════════════════════════════

STEP 1: TREND CHECK (4H)
─────────────────────────────────────────────────────────
Timeframe: 4H
Action: Calculate EMA 20 & EMA 50

Decision Tree:
├─ Price > EMA20 > EMA50? 
│  └─ YES → UPTREND → Look for LONG
│  └─ NO → Check downtrend
│
├─ Price < EMA20 < EMA50?
│  └─ YES → DOWNTREND → Look for SHORT
│  └─ NO → Check sideways
│
└─ Sideways conditions met (2 out of 3)?
   └─ YES → SIDEWAYS → Skip this coin
   └─ NO → Re-check trend

Output: TREND CONFIRMED → Continue to Step 2
        SIDEWAYS → Skip to next coin

─────────────────────────────────────────────────────────

STEP 2: ZONE DETECTION (1H/4H)
─────────────────────────────────────────────────────────
Timeframe: 1H or 4H
Action: Run ZigZag++ and Swing detection

Process:
1. Get adaptive parameters
   ├─ Calculate ATR%
   ├─ Apply volatility multiplier
   └─ Apply timeframe multiplier

2. Run ZigZag++
   ├─ Depth: Adaptive
   ├─ Deviation: Adaptive
   ├─ Backstep: 2 (fixed)
   └─ Lookback: 600 candles (1H)

3. Identify Swing Points
   ├─ Strength: Adaptive
   ├─ Validate ZigZag points
   └─ Confirm swing highs/lows

4. Create Zones
   ├─ Group swing points
   ├─ Min 2 touches
   ├─ Max 1.5% thickness
   └─ Merge overlapping zones

5. Calculate Zone Quality (0-10)
   ├─ Touch count: 0-4 points
   ├─ Thickness: 0-3 points
   ├─ Recency: 0-3 points
   └─ Total score

6. Filter Zones
   └─ Keep only Quality >= 4

Output: VALID ZONES LIST → Continue to Step 3
        NO VALID ZONES → Skip to next coin

─────────────────────────────────────────────────────────

STEP 3: PRICE MONITORING (1H/15M)
─────────────────────────────────────────────────────────
Action: Monitor if price approaching any zone

Monitoring:
├─ Current price: $X
├─ Nearest zone: $Y - $Z
├─ Distance: Calculate
│
└─ If distance < 2%:
   └─ Switch to 15M for entry timing

Output: PRICE IN ZONE → Continue to Step 4
        PRICE FAR → Continue monitoring

─────────────────────────────────────────────────────────

STEP 4: ChoCH DETECTION (15M)
─────────────────────────────────────────────────────────
Timeframe: 15M (precise timing)
Action: Watch for market structure break

For LONG (in support zone):
1. Identify last Lower High (LH)
2. Monitor new candles
3. Wait for close ABOVE LH
4. Calculate ChoCH strength
5. Check minimum strength (0.4)

For SHORT (in resistance zone):
1. Identify last Higher Low (HL)
2. Monitor new candles
3. Wait for close BELOW HL
4. Calculate ChoCH strength
5. Check minimum strength (0.4)

ChoCH Strength Formula:
├─ Body distance score (40%)
├─ Volume confirmation (60%)
└─ Total: 0.0 - 1.0

Output: ChoCH CONFIRMED (strength >= 0.4) → Continue to Step 5
        ChoCH WEAK → Wait for better signal
        NO ChoCH → Continue monitoring

─────────────────────────────────────────────────────────

STEP 5: FIBONACCI RETRACEMENT (15M)
─────────────────────────────────────────────────────────
Action: Calculate and monitor Fib levels

Calculation:
For LONG:
├─ Swing Low: Last low before ChoCH
├─ Swing High: ChoCH breakout high
├─ Fib 0.705: swing_low + range * 0.295
└─ Fib 0.618: swing_low + range * 0.382

For SHORT:
├─ Swing High: Last high before ChoCH
├─ Swing Low: ChoCH breakout low
├─ Fib 0.705: swing_high - range * 0.295
└─ Fib 0.618: swing_high - range * 0.382

Monitoring:
1. Price retracing toward zone
2. Check if touches 0.705 → ENTRY SIGNAL!
3. If skips 0.705, check 0.618 → ENTRY SIGNAL!
4. If skips both → SETUP CANCELED

Output: FIB RETEST (0.705 or 0.618) → Continue to Step 6
        MISSED BOTH LEVELS → Cancel setup
        WAITING → Monitor

─────────────────────────────────────────────────────────

STEP 6: GATE SYSTEM CHECK (See Part 4)
─────────────────────────────────────────────────────────
Gate 1: Mandatory Requirements
├─ Zone exists: ✓/✗
├─ ChoCH confirmed: ✓/✗
├─ Fib retest: ✓/✗
├─ Trend aligned: ✓/✗
├─ Stop loss valid: ✓/✗
└─ RR >= 1.5: ✓/✗

Gate 2: Quality Score >= 40
├─ Calculate setup quality (0-100)
├─ Zone quality weight
├─ ChoCH strength weight
├─ Volume weight
├─ Market conditions weight
└─ Total score

Gate 3: Risk Limits OK
├─ Daily risk < 6%: ✓/✗
├─ Coin cooldown expired: ✓/✗
├─ Total open risk < 8%: ✓/✗
├─ Position size valid: ✓/✗
└─ Correlation check: ✓/✗

Gate 4: Psychological Checks
├─ Not in cooldown: ✓/✗
├─ Not FOMO: ✓/✗
├─ Not revenge: ✓/✗
├─ Not overtrading: ✓/✗
└─ Emotional state OK: ✓/✗

Output: ALL GATES PASSED → Continue to Step 7
        ANY GATE FAILED → REJECT TRADE

─────────────────────────────────────────────────────────

STEP 7: RL DECISION (See Part 4)
─────────────────────────────────────────────────────────
Action: RL evaluates if trade should be taken

State Evaluation:
├─ Setup quality score
├─ Recent performance
├─ Pattern history
├─ Market context
├─ Confidence level
└─ Risk assessment

RL Action Options:
1. ENTER_FULL (2% risk)
2. ENTER_REDUCED (1% risk)
3. SKIP (wait for better setup)
4. WAIT (conditions not optimal yet)

Output: ENTER → Continue to Step 8
        SKIP → Wait for next setup

─────────────────────────────────────────────────────────

STEP 8: TRADE EXECUTION (Agent 3)
─────────────────────────────────────────────────────────
Action: Calculate position size and place order

Calculations:
1. Stop Loss
   ├─ Last swing wick
   └─ + 0.5% buffer

2. Risk Amount
   ├─ Account balance * Risk%
   └─ Adjusted for setup quality

3. Position Size
   ├─ Risk amount / (Entry - Stop)
   └─ In coins/contracts

4. Take Profits
   ├─ TP1 (50%): RR 1.5
   ├─ TP2 (30%): Liquidity/Zone
   └─ TP3 (20%): Dynamic (ChoCH)

Order Placement:
├─ Market/Limit order @ Entry
├─ Stop Loss order @ Stop
├─ TP1 Limit @ TP1 price
└─ TP2 Limit @ TP2 price

Output: TRADE EXECUTED → Continue to Step 9

─────────────────────────────────────────────────────────

STEP 9: TRADE MANAGEMENT
─────────────────────────────────────────────────────────
Active Monitoring:

TP1 Hit (50%):
├─ Close 50% position
├─ Lock in profit
├─ Move SL to breakeven
└─ Risk eliminated ✓

TP2 Hit (30%):
├─ Close 30% position
├─ Trail stop loss
├─ Lock in additional profit
└─ Let final 20% run

TP3 Monitoring (20%):
├─ Watch for opposite ChoCH
├─ Trail stop aggressively
├─ Exit when ChoCH detected
└─ Or trailing stop hit

Stop Loss Hit:
├─ Close entire position
├─ Record loss
├─ Check re-entry eligibility
└─ Apply cooldown if needed

Output: TRADE COMPLETED → Continue to Step 10

─────────────────────────────────────────────────────────

STEP 10: POST-TRADE ANALYSIS
─────────────────────────────────────────────────────────
Action: Update RL model and records

Data Collection:
├─ Entry price, exit price(s)
├─ PnL (profit/loss)
├─ Setup quality score
├─ Zone quality
├─ ChoCH strength
├─ Market conditions
├─ Time in trade
└─ Exit reason

Outcome Score Calculation (-200 to +200):
├─ Base reward (win/loss)
├─ Setup quality bonus
├─ Risk management bonus
├─ Special penalties (FOMO, revenge)
└─ Total outcome score

RL Model Update:
├─ Store experience in buffer
├─ Update zone memory
├─ Adjust thresholds if needed
└─ Learn from outcome

Cooldown Application (if needed):
├─ Loss → 15-45 min cooldown (coin-specific)
├─ Multiple losses → Extended cooldown
└─ Daily limit → Stop trading

Zone Memory Update:
├─ Update zone statistics
├─ Re-entry success rate
├─ Overall zone performance
└─ Blacklist if needed

Output: READY FOR NEXT SETUP

═════════════════════════════════════════════════════════
END OF PA CYCLE
═════════════════════════════════════════════════════════
4.2 Decision Tree Summary
                    START
                      ↓
            ┌─────────────────┐
            │  4H TREND OK?   │
            └─────────────────┘
              ✓ YES   ✗ NO
                ↓       ↓
                ↓    SKIP COIN
                ↓
            ┌─────────────────┐
            │  ZONE FOUND?    │
            │  Quality >= 4?  │
            └─────────────────┘
              ✓ YES   ✗ NO
                ↓       ↓
                ↓    SKIP COIN
                ↓
            ┌─────────────────┐
            │  PRICE IN ZONE? │
            └─────────────────┘
              ✓ YES   ✗ NO
                ↓       ↓
                ↓    MONITOR
                ↓
            ┌─────────────────┐
            │  ChoCH FORMED?  │
            │  Strength>=0.4? │
            └─────────────────┘
              ✓ YES   ✗ NO
                ↓       ↓
                ↓    WAIT
                ↓
            ┌─────────────────┐
            │  FIB RETEST?    │
            │  0.705/0.618?   │
            └─────────────────┘
              ✓ YES   ✗ NO
                ↓       ↓
                ↓    CANCEL
                ↓
            ┌─────────────────┐
            │  4 GATES PASS?  │
            └─────────────────┘
              ✓ YES   ✗ NO
                ↓       ↓
                ↓    REJECT
                ↓
            ┌─────────────────┐
            │  RL APPROVES?   │
            └─────────────────┘
              ✓ YES   ✗ NO
                ↓       ↓
                ↓    SKIP
                ↓
            ┌─────────────────┐
            │  EXECUTE TRADE  │
            └─────────────────┘
                ↓
            ┌─────────────────┐
            │ MANAGE TRADE    │
            │ (TP1/TP2/TP3)   │
            └─────────────────┘
                ↓
            ┌─────────────────┐
            │ TRADE COMPLETE  │
            │ UPDATE RL       │
            └─────────────────┘
                ↓
            NEXT SETUP

🔄 5. RE-ENTRY vs NEW SETUP
5.1 Fark Nedir?
═════════════════════════════════════════════════════════
NEW SETUP (Normal Trade)
═════════════════════════════════════════════════════════
Characteristics:
├─ Fresh zone (never traded before OR cool-off period passed)
├─ Normal risk (2%)
├─ Full confidence
├─ No history on this specific zone
└─ Standard entry rules

Example:
10:00 - Zone A discovered
10:30 - ChoCH + Fib retest
10:35 - ENTRY (First time on Zone A)
       Risk: 2%
       Status: NEW SETUP

─────────────────────────────────────────────────────────

═════════════════════════════════════════════════════════
RE-ENTRY (Second Attempt)
═════════════════════════════════════════════════════════
Characteristics:
├─ Same zone (previously stopped)
├─ Reduced risk (1%)
├─ Cautious approach
├─ History: Previous stop loss
├─ Requires NEW ChoCH + NEW Fib retest
└─ Must pass re-entry eligibility checks

Example:
10:00 - Zone A entry (first attempt)
10:30 - Stop loss hit (-2%)
11:00 - Wait 30 minutes (2 candles)
11:30 - New ChoCH forms
11:45 - New Fib retest
11:50 - RE-ENTRY (Second attempt on Zone A)
       Risk: 1% (reduced)
       Status: RE-ENTRY #1

═════════════════════════════════════════════════════════
5.2 Re-entry Flow Chart
        STOP LOSS HIT
              ↓
    ┌─────────────────────┐
    │  Zone Broken?       │
    │  (Body close past)  │
    └─────────────────────┘
         NO ↓    YES ↓
            ↓         └→ ZONE BLACKLISTED
            ↓            (No re-entry ever)
    ┌─────────────────────┐
    │  Wait 30 Minutes    │
    │  (2 candles @15M)   │
    └─────────────────────┘
            ↓
    ┌─────────────────────┐
    │  New ChoCH Formed?  │
    └─────────────────────┘
         NO ↓    YES ↓
            ↓         ↓
         WAIT    ┌─────────────────────┐
                 │  ChoCH Strong?      │
                 │  (>= 0.4)           │
                 └─────────────────────┘
                      NO ↓    YES ↓
                         ↓         ↓
                      WAIT    ┌─────────────────────┐
                              │  New Fib Retest?    │
                              └─────────────────────┘
                                   NO ↓    YES ↓
                                      ↓         ↓
                                   WAIT    ┌─────────────────────┐
                                           │  Attempts < 2?      │
                                           └─────────────────────┘
                                                NO ↓    YES ↓
                                                   ↓         ↓
                                          ZONE BLACKLIST   ↓
                                          (Max attempts)   ↓
                                                           ↓
                                                  ┌─────────────────┐
                                                  │  RE-ENTRY       │
                                                  │  Risk: 1%       │
                                                  └─────────────────┘

📊 6. ZONE MEMORY SYSTEM
6.1 Zone Tracking
ZONE_MEMORY = {
    'zone_id': 'BTC_1H_Zone_50000',
    
    'zone_info': {
        'coin': 'BTCUSDT',
        'timeframe': '1H',
        'bottom': 50000,
        'top': 50100,
        'quality': 8,
        'created': '2024-01-15 10:00'
    },
    
    'trade_history': [
        {
            'attempt': 1,
            'date': '2024-01-15 14:30',
            'entry': 50050,
            'stop': 49750,
            'result': 'LOSS',
            'pnl': -2.0,
            'reason': 'False breakout',
            'choch_strength': 0.65,
            'fib_level': 0.705
        },
        {
            'attempt': 2,
            'date': '2024-01-15 16:00',
            'entry': 50045,
            'stop': 49750,
            'result': 'WIN',
            'pnl': +3.2,
            'reason': 'Clean bounce',
            'choch_strength': 0.78,
            'fib_level': 0.618
        }
    ],
    
    'statistics': {
        'total_attempts': 2,
        'wins': 1,
        'losses': 1,
        'win_rate': 0.50,
        'avg_pnl': +0.6,
        'best_pnl': +3.2,
        'worst_pnl': -2.0,
        'avg_choch_strength': 0.715,
        'preferred_fib': '0.618',  # RL learned
        'status': 'ACTIVE'
    },
    
    'rl_analysis': {
        'reliability_score': 7,  # 0-10
        're_entry_recommended': True,
        'optimal_choch_strength': 0.7,
        'optimal_fib_level': 0.618,
        'notes': 'Zone works better on 2nd attempt'
    },
    
    'blacklist_check': {
        'blacklisted': False,
        'reason': None,
        'consecutive_losses': 1,  # Max 3 before blacklist
        'last_update': '2024-01-15 16:00'
    }
}
6.2 Zone Blacklist Conditions
def check_zone_blacklist(zone_memory):
    """
    Zone blacklist edilmeli mi?
    """
    
    # ─────────────────────────────────
    # Condition 1: 3 Ardışık Kayıp
    # ─────────────────────────────────
    recent_trades = zone_memory['trade_history'][-3:]
    
    if len(recent_trades) == 3:
        if all(t['result'] == 'LOSS' for t in recent_trades):
            return {
                'blacklist': True,
                'reason': '3 consecutive losses',
                'action': 'Permanent blacklist'
            }
    
    # ─────────────────────────────────
    # Condition 2: Çok Düşük Win Rate
    # ─────────────────────────────────
    if zone_memory['statistics']['total_attempts'] >= 5:
        win_rate = zone_memory['statistics']['win_rate']
        
        if win_rate < 0.30:  # %30 altı
            return {
                'blacklist': True,
                'reason': f'Win rate too low: {win_rate:.0%}',
                'action': 'Temporary blacklist (30 days)'
            }
    
    # ─────────────────────────────────
    # Condition 3: Negatif Avg PnL
    # ─────────────────────────────────
    if zone_memory['statistics']['total_attempts'] >= 5:
        avg_pnl = zone_memory['statistics']['avg_pnl']
        
        if avg_pnl < -1.0:  # Ortalama %1 kayıp
            return {
                'blacklist': True,
                'reason': f'Negative avg PnL: {avg_pnl:.1f}%',
                'action': 'Temporary blacklist (60 days)'
            }
    
    # ─────────────────────────────────
    # Condition 4: Zone Bozulmuş
    # ─────────────────────────────────
    if zone_memory['zone_info'].get('broken', False):
        return {
            'blacklist': True,
            'reason': 'Zone structure broken',
            'action': 'Permanent blacklist'
        }
    
    return {
        'blacklist': False,
        'reason': 'Zone still valid'
    }

✅ PARÇA 3 ÖZET
Bu parçada öğrendiklerimiz:
1. Re-entry System
	•	✅ Re-entry koşulları (6 check)
	•	✅ 30 dk bekleme süresi
	•	✅ Yeni ChoCH + Fib retest şartı
	•	✅ Yarı risk (%1)
	•	✅ Max 2 re-entry per zone
	•	✅ RL öğrenme mekanizması
2. Adaptive Parameters
	•	✅ Volatiliteye göre ayarlama
	•	✅ Timeframe bazlı scaling
	•	✅ 3 fazlı optimizasyon
	◦	Faz 1: Heuristic (0-2 ay)
	◦	Faz 2: Grid search (2-6 ay)
	◦	Faz 3: RL optimization (6+ ay)
	•	✅ Coin-specific learning
3. Liquidity Detection
	•	✅ Wick sweep tespiti
	•	✅ TP2 için kullanım
	•	✅ Liquidity vs Zone seçimi
4. Complete PA Flow
	•	✅ 10 adımlı tam süreç
	•	✅ Her adımda karar mekanizması
	•	✅ Decision tree
	•	✅ Re-entry vs New setup farkı
5. Zone Memory System
	•	✅ Zone tracking
	•	✅ Trade history
	•	✅ RL analysis
	•	✅ Blacklist conditions

Sırada: PARÇA 4 - RL Architecture & Setup Scoring (RL State/Action/Reward, Setup Quality Score 0-100, Gate System)
Devam edelim mi? 🚀
